{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\InfoTooltip.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoTooltip = _ref => {\n  _s();\n  let {\n    onClose,\n    isOpen\n  } = _ref;\n  const [isComplete, setIsComplete] = React.useState(false);\n  const [title, setTitle] = React.useState(\"\");\n  const setPopupContent = () => {\n    isComplete ? \"good\" : \"bad\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup popup_type_info \n      ${isOpen ? `popup_opened` : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        type: \"button\",\n        className: `popup__close popup__close_type_info`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoTooltip, \"y0De5x30qb0Ky/HWMeQ3xlp+FiE=\");\n_c = InfoTooltip;\nexport default InfoTooltip;\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","InfoTooltip","_ref","_s","onClose","isOpen","isComplete","setIsComplete","useState","title","setTitle","setPopupContent","className","children","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["C:/dev/react-mesto-auth/src/components/InfoTooltip.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst InfoTooltip = ({onClose, isOpen}) => {\r\nconst [isComplete, setIsComplete] = React.useState(false)\r\nconst [title, setTitle] = React.useState(\"\");\r\n const setPopupContent = () => {\r\n isComplete ? \"good\" : \"bad\"\r\n }\r\n\r\n  return ( \r\n    <div\r\n    className={`popup popup_type_info \r\n      ${isOpen ? `popup_opened` : \"\"}`}\r\n  >\r\n    <fieldset className=\"popup__container\">\r\n      <button\r\n        onClick={onClose}\r\n        type=\"button\"\r\n        className={`popup__close popup__close_type_info`}\r\n      />\r\n      <img src=\"\"></img>\r\n      <h2 className=\"popup__title\">{title}</h2>\r\n    </fieldset>\r\n  </div>\r\n\r\n  );\r\n}\r\n \r\nexport default InfoTooltip;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAH,IAAA;EACtC,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC9BL,UAAU,GAAG,MAAM,GAAG,KAAK;EAC3B,CAAC;EAEA,oBACEN,OAAA;IACAY,SAAS,EAAG;AAChB,QAAQP,MAAM,GAAI,cAAa,GAAG,EAAG,EAAE;IAAAQ,QAAA,eAEnCb,OAAA;MAAUY,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBACpCb,OAAA;QACEc,OAAO,EAAEV,OAAQ;QACjBW,IAAI,EAAC,QAAQ;QACbH,SAAS,EAAG;MAAqC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjD,eACFnB,OAAA;QAAKoB,GAAG,EAAC;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAClBnB,OAAA;QAAIY,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEJ;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAChC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAGR,CAAC;AAAAhB,EAAA,CAxBKF,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}