{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\InfoTooltip.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport complete from \"../image/complete.svg\";\nimport error from \"../image/error.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoTooltip = _ref => {\n  _s();\n  let {\n    onClose,\n    isOpen\n  } = _ref;\n  const [isComplete, setIsComplete] = React.useState(false);\n  const [title, setTitle] = React.useState(\"good\");\n  const [imgSrc, setImgSrc] = React.useState(\"\");\n  const setPopupContent = () => {\n    if (isComplete) {\n      setTitle(\"good\");\n      setImgSrc(complete);\n    } else {\n      setTitle(\"bad\");\n      setImgSrc(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup popup_type_info \n      ${isOpen ? `popup_opened` : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        type: \"button\",\n        className: `popup__close popup__close_type_info`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"popup__infoTool-img\",\n        src: imgSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__title popup__title_type_info\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setPopupContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoTooltip, \"zg108jtUoHn3/4ljFgCm8rWb/SA=\");\n_c = InfoTooltip;\nexport default InfoTooltip;\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["React","complete","error","jsxDEV","_jsxDEV","InfoTooltip","_ref","_s","onClose","isOpen","isComplete","setIsComplete","useState","title","setTitle","imgSrc","setImgSrc","setPopupContent","className","children","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["C:/dev/react-mesto-auth/src/components/InfoTooltip.js"],"sourcesContent":["import React from \"react\";\r\nimport complete from \"../image/complete.svg\"\r\nimport error from \"../image/error.svg\"\r\n\r\nconst InfoTooltip = ({onClose, isOpen}) => {\r\nconst [isComplete, setIsComplete] = React.useState(false)\r\nconst [title, setTitle] = React.useState(\"good\");\r\nconst [imgSrc, setImgSrc] = React.useState(\"\");\r\n\r\n const setPopupContent = () => {\r\n  if (isComplete) {\r\n    setTitle(\"good\");\r\n    setImgSrc(complete);\r\n  } else {setTitle(\"bad\"); setImgSrc(error)}\r\n }\r\n\r\n  return ( \r\n    <div\r\n    className={`popup popup_type_info \r\n      ${isOpen ? `popup_opened` : \"\"}`}\r\n  >\r\n    <fieldset className=\"popup__container\">\r\n      <button\r\n        onClick={onClose}\r\n        type=\"button\"\r\n        className={`popup__close popup__close_type_info`}\r\n      />\r\n      <img className=\"popup__infoTool-img\" src={imgSrc}></img>\r\n      <h2 className=\"popup__title popup__title_type_info\">{title}</h2>\r\n      <button onClick={setPopupContent}></button>\r\n\r\n    </fieldset>\r\n  </div>\r\n\r\n  );\r\n}\r\n \r\nexport default InfoTooltip;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAH,IAAA;EACtC,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,KAAK,CAACY,QAAQ,CAAC,MAAM,CAAC;EAChD,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGhB,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAE7C,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC7B,IAAIP,UAAU,EAAE;MACdI,QAAQ,CAAC,MAAM,CAAC;MAChBE,SAAS,CAACf,QAAQ,CAAC;IACrB,CAAC,MAAM;MAACa,QAAQ,CAAC,KAAK,CAAC;MAAEE,SAAS,CAACd,KAAK,CAAC;IAAA;EAC1C,CAAC;EAEA,oBACEE,OAAA;IACAc,SAAS,EAAG;AAChB,QAAQT,MAAM,GAAI,cAAa,GAAG,EAAG,EAAE;IAAAU,QAAA,eAEnCf,OAAA;MAAUc,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBACpCf,OAAA;QACEgB,OAAO,EAAEZ,OAAQ;QACjBa,IAAI,EAAC,QAAQ;QACbH,SAAS,EAAG;MAAqC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjD,eACFrB,OAAA;QAAKc,SAAS,EAAC,qBAAqB;QAACQ,GAAG,EAAEX;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACxDrB,OAAA;QAAIc,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAEN;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAChErB,OAAA;QAAQgB,OAAO,EAAEH;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAElC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAGR,CAAC;AAAAlB,EAAA,CA/BKF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}